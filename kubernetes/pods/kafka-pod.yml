apiVersion: v1
kind: Pod
metadata:
  name: kafka-1
  labels:
    app: kafka-service
spec:
  containers:
    - name: kafka
      image: bitnami/kafka:latest
      ports:
        - containerPort: 9092
        - containerPort: 9093
        - containerPort: 29092
      env:
        - name: BITNAMI_DEBUG
          value: "yes"
        - name: KAFKA_CFG_NODE_ID
          value: "1"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "controller,broker"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "1@kafka-1:9093"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: KAFKA_CFG_LISTENERS
          value: "CONTROLLER://kafka-1:9093,CLIENT://kafka-1:29092,EXTERNAL://0.0.0.0:9092"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "CLIENT://kafka-1:29092,EXTERNAL://localhost:9092"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "CLIENT"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: "fztU8TfA55Holo3Cd0V3"
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_ENABLE_KRAFT
          value: "yes"
      volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka
  volumes:
    - name: kafka-data
      persistentVolumeClaim:
        claimName: kafka-1-pvc
